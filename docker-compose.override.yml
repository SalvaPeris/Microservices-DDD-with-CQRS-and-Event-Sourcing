version: '3.4'

services:
  microservices.posts.commands.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_ENVIRONMENT_DATABASE=Development.PostgreSQL
      - KAFKA_TOPIC=SocialMediaPostEvents
    ports:
      - "8080"
      - "8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
  microservices.posts.queries.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_ENVIRONMENT_DATABASE=Development.PostgreSQL
      - KAFKA_TOPIC=SocialMediaPostEvents
    ports:
      - "8080"
      - "8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  postgresdb:
    container_name: postgresdb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  zookeeper:
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: kafka
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper

  sqlserverdb:
    container_name: sqlserverdb
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "myPass123"
      MSSQL_PID: "Express"
      ACCEPT_EULA: "Y"

  mongodb:
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017" 
    volumes:
      - mongo_data:/data/db

  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@test.com
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    ports: 
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin

  